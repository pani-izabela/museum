<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:jdbc="http://www.springframework.org/schema/jdbc"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/security
                http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!--//poniżej konfigurujemy na jakie podstrony (parametr pattern) będzie miał prawo wejść użytkownik z przypisanymi rolami-->
    <!--//role dla użytkowników pobierane są z bazy zapytaniem znajdującym się na końcu pliku,-->
    <!--//w przypadku braku uprawnień do wejścia na stronę zwrócony zostanie error 403.-->

    <http auto-config="true">
        <intercept-url pattern="/admin/*" access="hasAuthority('admin')"/>

        <intercept-url pattern="/index" access="permitAll()"/>


       <!-- &lt;!&ndash;poniżej podajemy na której z podstron znajduje się nasz formularz logowania&ndash;&gt;
        <form-login login-page="/customer/login"
                    login-processing-url="/performLogin"
                    default-target-url="/index"
                    username-parameter="email"
                    password-parameter="pswd"
                    authentication-failure-url="/login/error"
        />

        <logout logout-success-url="/index"
                logout-url="/performLogout"
                invalidate-session="true"
                delete-cookies="JSESSIONID"
        />

        <csrf disabled="true"/>-->
    </http>

    <authentication-manager>
        <authentication-provider>
            <!--poniżej konfigurujemy dwa zapytania hql do naszej bazy-->
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="select email,password,1 as enabled from appuser where email=?"
                               authorities-by-username-query="select au.email, r.name from appuser au, role r, user_roles ur where au.id = ur.id_appuser and ur.id_role = r.id and au.email =?"/>
            <password-encoder ref="passwordEncoder"/>

        </authentication-provider>
    </authentication-manager>
    <!--tutaj ustawiamy kodowanie haseł, w naszym przypadku przetrzymujemy je w bazie w postaci jawnej, odpowiada temu metoda NoOpPasswordEncoder - -->
    <!--jest ona oznaczona jako deprecated w kopmilatorze ale żeby nie komplikować z szyfrowaniem haseł w bazie użyłem właśnie jej-->
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder" factory-method="getInstance"/>

    <jdbc:embedded-database id="dataSource"/>
</beans:beans>